#!/bin/zsh


set -u
set -o pipefail

readonly CLRLINE='\033[0K'
readonly ESC='\033[0m'
readonly BOLD='\033[1m'
readonly BLUE='\033[34m'
readonly BLUE_UL='\033[4;34m'
readonly GREEN='\033[32m'
readonly GREEN_UL='\033[4;32m'
readonly RED='\033[31m'

# Script to perform installation of nix-darwin on MacOS
#

{ # Prevent execution if this script was only partially downloaded
oops() {
    echo "$0:" "$@" >&2
    exit 1
}

umask 0022

# Perform automated install
darwintmpDir="$(mktemp -d -t darwinautoinstalldir.XXXXXXXXX || \
          oops "Can't create temporary directory for downloading the nix-darwin install script")"

cleanup() {
    rm -rf "$darwintmpDir"
}
trap cleanup EXIT INT QUIT TERM

if [[ $(darwin-version --version) ]]; then
    echo nix-darwin already installed
    exit 1
fi

## Executed the startup scripts to ensure nix path is present
if [[ ! $(nix --version 2>/dev/null) ]]; then
    . /etc/zprofile
    . /etc/zshrc
fi

echo "${BOLD}${GREEN}--> Downloading nix-darwin${ESC}"
pushd $darwintmpDir
nix-build https://github.com/LnL7/nix-darwin/archive/master.tar.gz -A installer

echo "${BOLD}${GREEN}--> Executing nix-darwin installer${ESC}"
yes | $darwintmpDir/result/bin/darwin-installer

echo "${BOLD}${GREEN}--> Starting a new sub-shell to configure nix-darwin${ESC}"
zsh -l <<EOF

. /etc/zshenv
. /etc/zprofile
. /etc/zshrc

darwin-rebuild switch -I darwin-config=$HOME/.config/nixpkgs/darwin/configuration.nix
EOF
popd

echo "${BLUE}Restart a new terminal to start using Nix and nix-darwin${ESC}"

} # End of wrapping

