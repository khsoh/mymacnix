#!/bin/zsh


set -u
set -o pipefail

readonly ESC="$(tput sgr0)"
readonly BOLD="$(tput bold)"
readonly GREEN="$(tput setaf 2)"
readonly RED="$(tput setaf 1)"

# Script to clone the mymacnix repo, stow the HOME subfolder in the repo and
# install and configure nix-darwin

{ # Prevent execution if this script was only partially downloaded

function print_arrow () {
    printf "${BOLD}${GREEN}"
    eval $(echo printf '"=%.0s"' {1..$SHLVL})
    printf "> $*${ESC}\n"
}

function get_gitfolder () {
    [[ ! -n "${gitfolder+1}" ]] || return
    local prompt="${BOLD}${GREEN}Enter name of subfolder within $HOME to clone mymacnix: ${ESC}"
    printf "$prompt"
    while read -r folder </dev/tty; do
        if [ "$folder" != "" ]; then
            if [[ ! -e "$HOME/$folder" ]]; then
                break
            fi
            printf "${RED}$HOME/$folder already exists - please choose another directory${ESC}\n"
        fi
        printf "$prompt"
    done
    eval "export gitfolder=$HOME/$folder"
}

## Test to confirm nix has been installed
if [[ ! $(mount | grep -w "/nix") ]]; then
    printf "${BOLD}${RED}Error: Nix has not yet been installed - clonerepo-autoinstall script cannot be executed${ESC}\n"
    exit 1
fi

## Executed the startup scripts to ensure nix path is present
if [[ ! $(nix --version 2>/dev/null) ]]; then
    . /etc/zprofile
    . /etc/zshrc
fi

if [[ $(darwin-version --version 2>/dev/null) ]]; then
    printf "${BOLD}${RED}nix-darwin already installed - will not clone mymacnix repo to install nix-darwin${ESC}\n"
    exit 1
fi

get_gitfolder

mkdir -p ~/.config

print_arrow "Cloning branch ${MMXBRANCH:-main} of mymacnix repo"
nix-shell -p git stow --command '
git clone --branch ${MMXBRANCH:-main} --recurse-submodules https://github.com/khsoh/mymacnix.git "$gitfolder"
bash -l "$gitfolder/dostow.sh"
'

print_arrow "Starting a new sub-shell to install nix-darwin"
pushd "$gitfolder"
zsh -l darwin-autoinstall
popd

} # End of wrapping

