{ config, pkgs, lib, ... }:
let
  HOMEDIR = builtins.getEnv "HOME";
  CaskMasDir = "${HOMEDIR}/.config/CaskMasApps/";
  formulaenix = CaskMasDir + "formulae.nix";
  commonformulaenix = CaskMasDir + "common-formulae.nix";
  casksnix = CaskMasDir + "casks.nix";
  commoncasksnix = CaskMasDir + "common-casks.nix";
  masappsnix = CaskMasDir + "masapps.nix";
  commonmasappsnix = CaskMasDir + "common-masapps.nix";

  defaultcasksnix = ./default-casks.nix;
  defaultmasappsnix = ./default-masapps.nix;

  CASKROOM = /opt/homebrew/Caskroom;
  ## List of user casks that follows the nix-darwin format for
  ##  each element of homebrew.casks attribute set entry
  ## The "appname" field is removed by the BrewCask function
  ##  to make the USERCASKS compatible with the homebrew.casks
  ##  entry
  ##
  ## The appname entry is used to filter out applications that
  ##  were already installed before Homebrew.  This specifies
  ##  the application name under the /Applications folder.
  AppExists = (appName: builtins.pathExists (/Applications + "/${appName}"));
  CaskInstalled = (n: builtins.pathExists (CASKROOM + "/${n}"));

  ## Formulae to install
  FORMULAE = if builtins.pathExists formulaenix then
    import formulaenix ++ import commonformulaenix
  else [];

  ## Casks are machine dependent
  USERCASKS = if builtins.pathExists casksnix then
    import casksnix ++ import commoncasksnix
  else import defaultcasksnix;

  MASAPPS = if builtins.pathExists masappsnix then
    lib.trivial.mergeAttrs (import masappsnix) (import commonmasappsnix)
  else import defaultmasappsnix;

  caskOptions = [ "name" "args" "greedy" ];
  BrewCask = (casks:
    builtins.map (e: lib.attrsets.filterAttrs (n: v: builtins.elem n caskOptions) e)
    (builtins.filter (e: !(e ? appname) || (!AppExists e.appname) || (CaskInstalled e.name)) casks));
in {

  warnings = lib.mkIf (!builtins.pathExists casksnix) [
    ''
    Using default-casks.nix and default-masapps.nix for 
    Homebrew casks and masapps.

    To build Homebrew casks and masapps specifically for
    ths machine, create and configure casks.nix and masapps.nix 
    in ${CaskMasDir}.
    ''
  ];

  ### Homebrew setup.  Default it to false
  homebrew.enable = true;

  # Use Brewfile in /nix/store that is generated by configuration.nix when invoking brew bundle command
  homebrew.global.brewfile = true;

  ### Setup for updates via Nix
  homebrew.global.autoUpdate = false;
  homebrew.onActivation.upgrade = true;
  homebrew.onActivation.autoUpdate = true;
  ### End Setup for updates via Nix

  homebrew.brews = FORMULAE;

  homebrew.casks = BrewCask USERCASKS;

  homebrew.masApps = MASAPPS;

  ## The following allows Nix to uninstall stuff absent from cask list
  homebrew.onActivation.cleanup = "zap";
}

