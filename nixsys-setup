#!/bin/zsh


set -u
set -o pipefail

## Choice of repository host "github" or "gitlab"

REPOHOST=${1:-gitlab}

readonly ESC="$(tput sgr0)"
readonly BOLD="$(tput bold)"
readonly GREEN="$(tput setaf 2)"
readonly RED="$(tput setaf 1)"

SCRIPTNAME=$(readlink -f "$0")
SCRIPTDIR=$(dirname "$SCRIPTNAME")

# Script to clone the mymacnix repo, stow the HOME subfolder in the repo and
# install and configure nix-darwin

function print_arrow () {
    printf "${BOLD}${GREEN}"
    eval $(echo printf '"=%.0s"' {1..$SHLVL})
    printf "> $*${ESC}\n"
}

function usage () {
    print_arrow "Usage: "
    print_arrow "  zsh -l nixsys-setup [--install=nixonly] [--branch=<feature-branch>]"
    print_arrow "    The default feature-branch is 'main' if it is not specified"
    exit 1
}

function get_gitfolder () {
    [[ ! -n "${gitfolder+1}" ]] || return
    local prompt="${BOLD}${GREEN}Enter name of subfolder within $HOME to clone mymacnix: ${ESC}"
    printf "$prompt"
    while read -r folder </dev/tty; do
        if [ "$folder" != "" ]; then
            if [[ ! -e "$HOME/$folder" ]]; then
                break
            fi
            printf "${RED}$HOME/$folder already exists - please choose another directory${ESC}\n"
        fi
        printf "$prompt"
    done
    eval "export gitfolder=$HOME/$folder"
}

## Test to confirm nix has been installed
if [[ ! $(mount | grep -w "/nix") ]]; then
    printf "${BOLD}${RED}Error: Nix has not yet been installed - nixsys-setup script cannot be executed${ESC}\n"
    exit 1
fi

OPTINSTALL="all"
BRANCH="main"
CMDARGS=( "$@" )
while test $# -gt 0; do
    case "$1" in
        --install=nixonly)
            OPTINSTALL="${1##--install=}";;
        --branch=*)
            BRANCH="${1##--branch=}";;
        *)
            echo "Invalid option $1"
            usage;;
    esac
    shift
done

## Executed the startup scripts to check what whether nix or nix-darwin installed
DARWININSTALLED=1
ZSCRIPTSRUN=0

if [[ ! $(nix --version 2>/dev/null) ]]; then
    ## Executed the startup scripts to ensure nix path is present
    [[ -f /etc/zshenv ]] && . /etc/zshenv
    [[ -f /etc/zprofile ]] && . /etc/zprofile
    [[ -f /etc/zshrc ]] && . /etc/zshrc
    ZSCRIPTSRUN=1
    if [[ ! $(nix --version 2>/dev/null) ]]; then
        printf "${BOLD}${RED}nix cannot be executed even after executing /etc/z* startup scripts - something is wrong with this setup${ESC}\n"
        exit 1
    fi
fi

if [[ ! $(darwin-version --version 2>/dev/null) ]]; then
    if [[ ZSCRIPTSRUN -eq 1 ]]; then
        DARWININSTALLED=0
    else
        [[ -f /etc/zshenv ]] && . /etc/zshenv
        [[ -f /etc/zprofile ]] && . /etc/zprofile
        [[ -f /etc/zshrc ]] && . /etc/zshrc
        if [[ ! $(darwin-version --version 2>/dev/null) ]]; then
            DARWININSTALLED=0
        fi
    fi
fi

if [[ $DARWININSTALLED -eq 1 ]]; then
    printf "${BOLD}${RED}nix-darwin already installed - re-running darwin-rebuild switch${ESC}\n"
    darwin-rebuild switch
    exit
fi

# Added code to install Xcode command line tools
print_arrow "Checking whether Xcode command line tools have been installed"
sudo xcode-select -p &> /dev/null
if [ $? -ne 0 ]; then
  print_arrow "Command Line Tools for Xcode not found. Installing from softwareupdateâ€¦"
# This temporary file prompts the 'softwareupdate' utility to list the Command Line Tools
  touch /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress;
  PROD=$(softwareupdate -l | grep "\*.*Command Line" | tail -n 1 | sed 's/^[^C]* //')
  softwareupdate -i "$PROD" --verbose;
else
  print_arrow "Command Line Tools for Xcode have been installed."
fi


git -C "$SCRIPTDIR" rev-parse 2>/dev/null
if [ $? -ne 0 ]; then
    ## Script folder is not a git folder
    get_gitfolder

    mkdir -p ~/.config/git

    print_arrow "Cloning branch ${BRANCH} of mymacnix repo"
    export BRANCH
    nix-shell -p stow --command '
    git clone --branch ${BRANCH} --recurse-submodules https://${REPOHOST}.com/khsoh/mymacnix.git "$gitfolder"
    mkdir -p ~/Library/LaunchAgents
    source "$gitfolder/dostow.sh"
    '

    ## Install agenix channel
    sudo nix-channel --add https://github.com/ryantm/agenix/archive/main.tar.gz agenix

    print_arrow "Completed cloning the repository"
else
    gitfolder=$SCRIPTDIR
fi

NEWCMDARGS=${CMDARGS[@]//--install=*/}
if [[ $OPTINSTALL == "nixonly" ]]; then
    print_arrow "Completed installing only nix and cloning repo"
    print_arrow "To proceed, open a new terminal and execute:"
    print_arrow "   cd \"$gitfolder\""
    print_arrow "   zsh -l nixsys-setup $NEWCMDARGS"
    exit
fi

## Update the nix channels
sudo nix-channel --update

print_arrow "Installing nix-darwin"
cd "$gitfolder"
zsh -l scripts/darwin-autoinstall


