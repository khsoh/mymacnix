# PROMPT

shopt -s extglob

# Indicate whether to put last command exit code in RHS or LHS prompt
EXITCODE_RHS=0

# default macOS prompt is: \h:\W \u\$

# assemble the right-aligned prompt string 
# - represented as PS1RHS within function
function __build_prompt {
    local EXIT="$?" # store current exit code


    # define some colors
    local RESET=$(tput sgr0)
    local BTRED=$(tput setaf 9)
    local BTGREEN=$(tput setaf 10)

    # Need to add \\ to escape [ for $RESET pattern matching
    local RE_BTRED=${BTRED//[/\\\\[}  
    local RE_BTGREEN=${BTGREEN//[/\\\\[}  
    local RE_RESET=${RESET//[/\\\\[}  

    # EXIT CODE matching
    local RE_EXITCODE=$(printf "\1${RE_BTRED}\2\\\\[+([0-9])\\\\]\1${RE_RESET}\2 ")

    # Remove any pre-existing exit code setting in PS1 prompt
    PS1=${PS1#${RE_EXITCODE}}

    # Generate current working directory string
    local PSPATH=${PWD/#${HOME}/\~}

    if [[ -z "$IN_NIX_SHELL" ]]; then
      # this is the default prompt for non-Nix setup
      PS1="\u # "
    else
      # Nix-shell - remove \w in PS1 because we already have it at the right prompt
      PS1=${PS1/:*\\w/}
      # Remove any starting \n
      PS1=${PS1/#\\n/}
    fi

    # Create a right-aligned prompt in bright GREEN
    printf -v PS1RHS "\1${BTGREEN}\2${PSPATH}\1${RESET}\2 "

    # Print non-zero exit code of the last command in Bright RED
    if [[ $EXIT -ne 0 ]]; then
        if [[ $EXITCODE_RHS -eq 1 ]]; then
          PS1RHS=${PS1RHS}$(printf "\1${BTRED}\2[${EXIT}]\1${RESET}\2 ")
        else
          PS1=$(printf "\1${BTRED}\2[${EXIT}]\1${RESET}\2 ")$PS1
        fi
    fi

    # Strip ANSI commands before counting length
    local matchstr=$(printf "\1@(${RE_RESET}|\x1B\\[+(+([0-9])?(;))m)\2")
    local PS1RHS_stripped=${PS1RHS//${matchstr}/}

    ### DEBUGGING CODE
    # instr="$PS1RHS_stripped"
    #
    # for ((i = 0 ; i < ${#instr}; i++)); do
    #     chr="${instr:i:1}"
    #     ascv=$(printf "%d" "'$chr")
    #     echo "$chr: $ascv"
    # done

    ## colpos positions the cursor at the specified column via \x1B[#G command
    local colpos=$(printf "\1\x1B[%dG\2" $(($(tput cols) - ${#PS1RHS_stripped} + 1)))
    printf "${colpos}%s\r" "${PS1RHS}"
}

# set the prompt command
# include previous values to maintain Apple Terminal support (window title path and sessions)
# this is explained in /etc/bashrc_Apple_Terminal
PROMPT_COMMAND="__build_prompt${PROMPT_COMMAND:+; $PROMPT_COMMAND}"
