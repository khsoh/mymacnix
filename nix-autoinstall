#!/bin/sh


set -u
set -o pipefail

readonly ESC="$(tput sgr0)"
readonly BOLD="$(tput bold)"
readonly GREEN="$(tput setaf 2)"
readonly RED="$(tput setaf 1)"

# Script to perform automated installation of Nix on MacOS and clone mymacnix to install nix-Darwin
#

{ # Prevent execution if this script was only partially downloaded

function print_arrow () {
    printf "${BOLD}${GREEN}"
    eval $(echo printf '"=%.0s"' {1..$SHLVL})
    printf "> $*${ESC}\n"
}

function usage () {
    print_arrow "Usage: "
    print_arrow "  sh <(curl -L https://raw.githubusercontent.com/khsoh/mymacnix/main/nix-autoinstall) [--install=nixonly] [--branch=<feature-branch>]"
    print_arrow "    The default feature-branch is 'main' if it is not specified"
    exit 1
}

oops() {
    echo "$0:" "$@" >&2
    exit 1
}

umask 0022

# Perform automated install
nixtmpDir="$(mktemp -d -t nixautoinstalldir.XXXXXXXXX || \
          oops "Can't create temporary directory for downloading the nix install scripts")"

cleanup() {
    rm -rf "$nixtmpDir"
}
trap cleanup EXIT INT QUIT TERM

function get_gitfolder () {
    [[ ! -n "${gitfolder+1}" ]] || return
    local prompt="${BOLD}${GREEN}Enter name of subfolder within $HOME to clone mymacnix: ${ESC}"
    printf "$prompt"
    while read -r folder </dev/tty; do
        if [ "$folder" != "" ]; then
            if [[ ! -e "$HOME/$folder" ]]; then
                break
            fi
            printf "${RED}$HOME/$folder already exists - please choose another directory${ESC}\n"
        fi
        printf "$prompt"
    done
    eval "export gitfolder=$HOME/$folder"
}

if [ ! -d ~/.ssh ]; then
    printf "${RED}~/.ssh is absent - please populate the SSH keys before proceeding${ESC}\n"
    exit 1
fi

OPTINSTALL="all"
BRANCH="main"
CMDARGS=( "$@" )
while test $# -gt 0; do
    case "$1" in
        --install=nixonly)
            OPTINSTALL="${1##--install=}";;
        --branch=*)
            BRANCH="${1##--branch=}";;
        *)
            echo "Invalid option $1"
            usage;;
    esac
    shift
done


# Test if Nix is already installed
if [[ $(nix --version 2>/dev/null) ]]; then
    printf "${BOLD}${RED}Nix already installed - nix-autoinstall will not be executed${ESC}\n"
    exit 1
fi


# Prompt user for git folder early in install process because the Nix installation
# time takes a while - so we want the automated installation can proceed without 
# interruption after all the user inputs are collected first.
get_gitfolder

print_arrow "Starting to auto-install nix from https://nixos.org/nix/install"

yes | sh <<EOF
$(curl -L https://nixos.org/nix/install)
EOF

print_arrow "Downloading and executing nixsys-setup from ${BRANCH} branch of mymacnix repo"
curl -L https://raw.githubusercontent.com/khsoh/mymacnix/${BRANCH}/nixsys-setup -o ${nixtmpDir}/nixsys-setup
zsh -l ${nixtmpDir}/nixsys-setup ${CMDARGS[@]}

} # End of wrapping

