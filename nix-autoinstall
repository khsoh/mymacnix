#!/bin/sh


set -u
set -o pipefail

readonly ESC="$(tput sgr0)"
readonly BOLD="$(tput bold)"
readonly GREEN="$(tput setaf 2)"
readonly RED="$(tput setaf 1)"

# Script to perform automated installation of Nix on MacOS and clone mymacnix to install nix-Darwin
#

{ # Prevent execution if this script was only partially downloaded

function print_arrow () {
    printf "${BOLD}${GREEN}"
    eval $(echo printf '"=%.0s"' {1..$SHLVL})
    printf "> $*${ESC}\n"
}

function get_gitfolder () {
    [[ ! -n "${gitfolder+1}" ]] || return
    local prompt="${BOLD}${GREEN}Enter name of subfolder within $HOME to clone mymacnix: ${ESC}"
    printf "$prompt"
    while read -r folder </dev/tty; do
        if [ "$folder" != "" ]; then
            if [[ ! -e "$HOME/$folder" ]]; then
                break
            fi
            printf "${RED}$HOME/$folder already exists - please choose another directory${ESC}\n"
        fi
        printf "$prompt"
    done
    eval "export gitfolder=$HOME/$folder"
}

# Test if Nix is already installed
if [[ $(nix --version 2>/dev/null) ]]; then
    printf "${BOLD}${RED}Nix already installed - nix-autoinstall will not be executed${ESC}\n"
    exit 1
fi

# Prompt user for git folder early in install process because the Nix installation
# time takes a while - so we want the automated installation can proceed without 
# interruption after all the user inputs are collected first.
get_gitfolder

print_arrow "Starting to auto-install nix from https://nixos.org/nix/install"

yes | sh <<EOF
$(curl -L https://nixos.org/nix/install)
EOF

MMXBRANCH=${MMXBRANCH:-main}
print_arrow "Starting a new sub-shell to clone $MMXBRANCH branch of mymacnix repository"
zsh -l <<EOF
echo Downloading and executing clonerepo-autoinstall from ${MMXBRANCH:-main} branch of mymacnix repo
MMXBRANCH=${MMXBRANCH:-main}
$(curl -L https://raw.githubusercontent.com/khsoh/mymacnix/${MMXBRANCH:-main}/clonerepo-autoinstall)
EOF


} # End of wrapping

