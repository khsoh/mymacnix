#!/bin/sh


set -u
set -o pipefail

readonly CLRLINE='\033[0K'
readonly ESC='\033[0m'
readonly BOLD='\033[1m'
readonly BLUE='\033[34m'
readonly BLUE_UL='\033[4;34m'
readonly GREEN='\033[32m'
readonly GREEN_UL='\033[4;32m'
readonly RED='\033[31m'

# Script to perform installation of Nix on MacOS
#

{ # Prevent execution if this script was only partially downloaded
oops() {
    echo "$0:" "$@" >&2
    exit 1
}

umask 0022

# Perform automated install
tmpDir="$(mktemp -d -t nixautoinstalldir.XXXXXXXXX || \
          oops "Can't create temporary directory for downloading the Nix install script")"

cleanup() {
    rm -rf "$tmpDir"
}
trap cleanup EXIT INT QUIT TERM
curl -L https://nixos.org/nix/install > "$tmpDir/nixinstall"
yes | sh "$tmpDir/nixinstall"


zsh -l <<-EOF
echo "${BOLD}${GREEN}--> Starting a new sub-shell to install nix-darwin${ESC}"

## Executed the startup scripts to ensure nix path is present
. /etc/zprofile
. /etc/zshrc

# Upgrade nix
echo "${BOLD}${GREEN}--> Executing nix upgrade-nix${ESC}"
nix upgrade-nix

# Script to perform installation of nix-darwin on MacOS
#

umask 0022

echo "${BOLD}${GREEN}--> Downloading nix-darwin${ESC}"
nix-build https://github.com/LnL7/nix-darwin/archive/master.tar.gz -A installer

echo "${BOLD}${GREEN}--> Executing nix-darwin installer${ESC}"
yes | ./result/bin/darwin-installer

echo "${BOLD}${GREEN}--> Start a new Terminal to start using nix-darwin${ESC}"

EOF

} # End of wrapping

